// 2023-10-11T13:33
// 2023-10-11T13:45
#include <iostream>
#include <list>

int main()
{
	int n;
	std::cin >> n;

	std::list<int> a;

	for (int i = 1; i <= n; i++)
	{
		a.push_back(i);
	}
	
	// 한 사이클에 두번 동작함으로써 두가지 경우로 분류
	for (int i = 1; i <= n * 2; i++) 
	{
		if (a.size() == 1) // 1개 남았는가?
			break;
		if (i % 2 == 1) // 첫번째
		{
			a.pop_front();
		}
		else if (i % 2 == 0) // 두번째
		{
			int temp = a.front();
			a.pop_front();
			a.push_back(temp);
		}
	}

	std::cout << a.front() << "\n";

	return 0;
}

/*
예를 들어 N=4인 경우를 생각해 보자. 카드는 제일 위에서부터 1234 의 순서로 놓여있다. 1을 버리면 234가 남는다. 여기서 2를 제일 아래로 옮기면 342가 된다. 3을 버리면 42가 되고, 4를 밑으로 옮기면 24가 된다. 마지막으로 2를 버리고 나면, 남는 카드는 4가 된다.

N이 주어졌을 때, 제일 마지막에 남게 되는 카드를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 정수 N(1 ≤ N ≤ 500,000)이 주어진다.

출력
첫째 줄에 남게 되는 카드의 번호를 출력한다.
*/
